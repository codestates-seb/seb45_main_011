plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

jacoco {
	// JaCoCo 버전
	toolVersion = '0.8.10'

//  테스트결과 리포트를 저장할 경로 변경
//  default는 "$/jacoco"
//  reportsDir = file("$buildDir/customJacocoReportDir")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// security, oauth2
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'com.google.code.gson:gson:2.10.1'
	//jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'
	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	//mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	// spring-security-test 모듈 추가
	testImplementation 'org.springframework.security:spring-security-test'

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'org.webjars:sockjs-client'
//	implementation 'org.webjars:stomp-websocket'
	implementation 'org.springframework:spring-messaging'
	implementation 'org.springframework.security:spring-security-messaging'
}

test {
	finalizedBy 'jacocoTestReport'
	useJUnitPlatform()

	jacoco {
		excludes += [
				"com/growstory/domain/**/dto/**",
				"com/growstory/domain/**/entity/**",
				"com/growstory/domain/**/repository/**",
				"com/growstory/domain/**/mapper/**",
				"com/growstory/global/**",
				"com/growstory/*Application*",
				"com/growstory/*Hello*"
		]
	}
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/growstory/domain/**/dto/**",
					"com/growstory/domain/**/entity/**",
					"com/growstory/domain/**/repository/**",
					"com/growstory/domain/**/mapper/**",
					"com/growstory/global/**",
					"com/growstory/*Application*",
					"com/growstory/*Hello*"
			])
		}))
	}
}